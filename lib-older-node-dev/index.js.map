{"version":3,"sources":["../src/index.js"],"names":["isModernBrowser","agents","edge","firefox","chrome","safari","minVersionsForOptions","options","safari10","key","minVersion","userAgent","minVersions","some","res","exec","parseFloat"],"mappings":";;;;;;kBAqBwBA,e;;;;;;;;AArBxB;AACA,IAAMC,SAAS;AACbC,QAAM,gBADO;AAEbC,WAAS,mBAFI;AAGbC,UAAQ,0BAHK,EAGuB;AACpCC,UAAQ;AAJK,CAAf;;AAOO,IAAMC,wDAAwB,SAAxBA,qBAAwB,UAAW;AAAA,SAC1CC,QAAQL,IAAR,IAAgBK,QAAQC,QADkB,GAErC,CACL,EAAEC,KAAK,MAAP,EAAeC,YAAY,EAA3B,EADK,EAEL,EAAED,KAAK,SAAP,EAAkBC,YAAY,EAA9B,EAFK,EAGL,EAAED,KAAK,QAAP,EAAiBC,YAAY,EAA7B,EAHK,EAIL,EAAED,KAAK,QAAP,EAAiBC,YAAY,IAA7B,EAJK,CAFqC,GAUvC,CAAC,EAAED,KAAK,SAAP,EAAkBC,YAAY,EAA9B,EAAD,EAAqC,EAAED,KAAK,QAAP,EAAiBC,YAAY,EAA7B,EAArC,CAVuC;AAW/C,CAXM;;AAaQ,SAASV,eAAT,CACbW,SADa,EAGb;AAAA,MADAJ,OACA,oEADU,EAAEL,MAAM,IAAR,EAAcM,UAAU,IAAxB,EACV;;AAAA,uBAFS,8BAET;;AAAA;;AACA,MAAMI,cAAcN,sBAAsBC,OAAtB,CAApB;AACA,SAAOK,YAAYC,IAAZ,CAAiB,gBAAyB;AAAA,QAAtBJ,GAAsB,QAAtBA,GAAsB;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;;AAC/C,QAAMI,MAAMb,OAAOQ,GAAP,EAAYM,IAAZ,CAAiBJ,SAAjB,CAAZ;AACA,WAAOG,OAAOE,WAAWF,IAAI,CAAJ,CAAX,KAAsBJ,UAApC;AACD,GAHM,CAAP;AAID","file":"index.js","sourcesContent":["// https://www.npmjs.com/package/babel-preset-modern-browsers\nconst agents = {\n  edge: /edge\\/([\\d]+)/i,\n  firefox: /firefox\\/([\\d]+)/i,\n  chrome: /chrom(?:e|ium)\\/([\\d]+)/i, // also works for opera.\n  safari: /version\\/([\\d\\w.-]+).*safari/i,\n};\n\nexport const minVersionsForOptions = options => {\n  if (options.edge || options.safari10) {\n    return [\n      { key: 'edge', minVersion: 15 },\n      { key: 'firefox', minVersion: 53 },\n      { key: 'chrome', minVersion: 55 },\n      { key: 'safari', minVersion: 10.1 },\n    ];\n  }\n\n  return [{ key: 'firefox', minVersion: 55 }, { key: 'chrome', minVersion: 60 }];\n};\n\nexport default function isModernBrowser(\n  userAgent: string,\n  options = { edge: true, safari10: true },\n) {\n  const minVersions = minVersionsForOptions(options);\n  return minVersions.some(({ key, minVersion }) => {\n    const res = agents[key].exec(userAgent);\n    return res && parseFloat(res[1]) >= minVersion;\n  });\n}\n"]}