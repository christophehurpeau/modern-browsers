{"version":3,"sources":["../src/index.js"],"names":["agents","key","regExp","minVersionsForOptions","options","edge","safari10","firefox","chrome","safari","minVersions","userAgent","agent","some","res","exec","version","minVersion","parseFloat"],"mappings":";AAAA;AACA,MAAMA,SAAS,CACb,EAAEC,KAAK,MAAP,EAAeC,QAAQ,gBAAvB,EADa,EAEb,EAAED,KAAK,SAAP,EAAkBC,QAAQ,mBAA1B,EAFa,EAGb,EAAED,KAAK,QAAP,EAAiBC,QAAQ,0BAAzB,EAHa,EAG0C;AACvD,EAAED,KAAK,QAAP,EAAiBC,QAAQ,4BAAzB,EAJa,EAKb,EAAED,KAAK,uBAAP,EAAgCC,QAAQ,8CAAxC,EALa,CAAf;;AAQA,OAAO,MAAMC,wBAAwBC,WAC/BA,QAAQC,IAAR,IAAgBD,QAAQE,QADO,GAE1B;AACLD,QAAM,EADD;AAELE,WAAS,EAFJ;AAGLC,UAAQ,EAHH;AAILC,UAAQ,IAJH;AAKL;AACA,2BAAyB;AANpB,CAF0B,GAY5B,EAAEF,SAAS,EAAX,EAAeC,QAAQ,EAAvB,EAZF;;AAeP,gBAAe,eAACJ,UAAU,EAAEC,MAAM,IAAR,EAAcC,UAAU,IAAxB,EAAX,EAA8C;AAC3D,QAAMI,cAAcP,sBAAsBC,OAAtB,CAApB;AACA,SAAQO,SAAD,IAAuB;AAAA,yBAAb,UAAa;;AAAA;;AAC5B,QAAIC,KAAJ;;AAOA,QANAZ,OAAOa,IAAP,CAAY,CAAC,EAAEZ,GAAF,EAAOC,MAAP,EAAD,KAAqB;AAC/B,YAAMY,MAAMZ,OAAOa,IAAP,CAAYJ,SAAZ,CAAZ;AAD+B,aAE1BG,GAAD,IAASA,IAAI,CAAJ,CAFkB,KAG/BF,QAAQ,EAAEX,GAAF,EAAOe,SAASF,IAAI,CAAJ,CAAhB,EAHuB,EAIxB,IAJwB;AAKhC,KALD,CAMA,EAAI,CAACF,KAAL,EAAY,OAAO,KAAP;;AAEZ,UAAMK,aAAaP,YAAYE,MAAMX,GAAlB,CAAnB;AAV4B,aAWvBgB,UAXuB,IAYrBC,WAAWN,MAAMI,OAAjB,KAA6BC,UAZR;AAa7B,GAbD;AAcD,CAhBD","file":"index.js","sourcesContent":["// https://www.npmjs.com/package/babel-preset-modern-browsers\nconst agents = [\n  { key: 'edge', regExp: /edge\\/([\\d]+)/i },\n  { key: 'firefox', regExp: /firefox\\/([\\d]+)/i },\n  { key: 'chrome', regExp: /chrom(?:e|ium)\\/([\\d]+)/i }, // also works for opera.\n  { key: 'safari', regExp: /version\\/([\\d.]+).*safari/i },\n  { key: 'mobile safari webview', regExp: /(?:iPod|iPhone|iPad).+AppleWebKit\\/([\\d.]+)/i },\n];\n\nexport const minVersionsForOptions = options => {\n  if (options.edge || options.safari10) {\n    return {\n      edge: 15,\n      firefox: 53,\n      chrome: 55,\n      safari: 10.1,\n      // https://en.wikipedia.org/wiki/Safari_version_history\n      'mobile safari webview': 603.1,\n    };\n  }\n\n  return { firefox: 55, chrome: 60 };\n};\n\nexport default (options = { edge: true, safari10: true }) => {\n  const minVersions = minVersionsForOptions(options);\n  return (userAgent: string) => {\n    let agent;\n    agents.some(({ key, regExp }) => {\n      const res = regExp.exec(userAgent);\n      if (!res || !res[1]) return false;\n      agent = { key, version: res[1] };\n      return true;\n    });\n    if (!agent) return false;\n\n    const minVersion = minVersions[agent.key];\n    if (!minVersion) return false;\n    return parseFloat(agent.version) >= minVersion;\n  };\n};\n"]}